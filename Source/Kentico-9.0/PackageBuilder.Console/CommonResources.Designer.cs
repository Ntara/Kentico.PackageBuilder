//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ntara.PackageBuilder {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class CommonResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CommonResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Ntara.PackageBuilder.CommonResources", typeof(CommonResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The reference assembly cannot be null or empty..
        /// </summary>
        internal static string ArgumentException_AssemblyNullOrEmpty {
            get {
                return ResourceManager.GetString("ArgumentException_AssemblyNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation package can not be created for module CMS.CustomSystemModule.
        /// </summary>
        internal static string ArgumentException_CustomSystemModuleNotAllowed {
            get {
                return ResourceManager.GetString("ArgumentException_CustomSystemModuleNotAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Installation package can be created only when module is currently in development..
        /// </summary>
        internal static string ArgumentException_DevelopmentModuleOnly {
            get {
                return ResourceManager.GetString("ArgumentException_DevelopmentModuleOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A valid module version is required..
        /// </summary>
        internal static string ArgumentException_ModuleVersionRequired {
            get {
                return ResourceManager.GetString("ArgumentException_ModuleVersionRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The output directory cannot be null or empty..
        /// </summary>
        internal static string ArgumentException_OutputDirectoryNullOrEmpty {
            get {
                return ResourceManager.GetString("ArgumentException_OutputDirectoryNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A valid module is required and cannot be null..
        /// </summary>
        internal static string ArgumentNullException_Module {
            get {
                return ResourceManager.GetString("ArgumentNullException_Module", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Module metadata is required and cannot be null..
        /// </summary>
        internal static string ArgumentNullException_ModuleMetadata {
            get {
                return ResourceManager.GetString("ArgumentNullException_ModuleMetadata", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A valid version resolver is required and cannot be null..
        /// </summary>
        internal static string ArgumentNullException_VersionResolver {
            get {
                return ResourceManager.GetString("ArgumentNullException_VersionResolver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays detailed errors and stack trace information..
        /// </summary>
        internal static string CommandLine_Debug_Description {
            get {
                return ResourceManager.GetString("CommandLine_Debug_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Overrides generated NuSpec metadata properties..
        /// </summary>
        internal static string CommandLine_Metadata_Description {
            get {
                return ResourceManager.GetString("CommandLine_Metadata_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supported Metadata:.
        /// </summary>
        internal static string CommandLine_Metadata_SectionTitle {
            get {
                return ResourceManager.GetString("CommandLine_Metadata_SectionTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A comma-separated list of authors for the package source code..
        /// </summary>
        internal static string CommandLine_MetadataObject_Authors_Description {
            get {
                return ResourceManager.GetString("CommandLine_MetadataObject_Authors_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The long description for the package..
        /// </summary>
        internal static string CommandLine_MetadataObject_Description_Description {
            get {
                return ResourceManager.GetString("CommandLine_MetadataObject_Description_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The unique identifier for the package..
        /// </summary>
        internal static string CommandLine_MetadataObject_Id_Description {
            get {
                return ResourceManager.GetString("CommandLine_MetadataObject_Id_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The human-friendly title for the package..
        /// </summary>
        internal static string CommandLine_MetadataObject_Title_Description {
            get {
                return ResourceManager.GetString("CommandLine_MetadataObject_Title_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Module code name (required)..
        /// </summary>
        internal static string CommandLine_Module_Description {
            get {
                return ResourceManager.GetString("CommandLine_Module_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NuSpec file path (absolute or relative to the website root)..
        /// </summary>
        internal static string CommandLine_NuSpecFile_Description {
            get {
                return ResourceManager.GetString("CommandLine_NuSpecFile_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specifies the package output directory. The default path is &apos;CMSSiteUtils/Export&apos;..
        /// </summary>
        internal static string CommandLine_OutputDirectory_Description {
            get {
                return ResourceManager.GetString("CommandLine_OutputDirectory_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Defines a set of property tokens where each occurrence of $token$ in the specified NuSpec file will be replaced with the given value..
        /// </summary>
        internal static string CommandLine_Properties_Description {
            get {
                return ResourceManager.GetString("CommandLine_Properties_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the package version explicitly or resolves the version by assembly attribute..
        /// </summary>
        internal static string CommandLine_Version_Description {
            get {
                return ResourceManager.GetString("CommandLine_Version_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Supported Versions:.
        /// </summary>
        internal static string CommandLine_Version_SectionTitle {
            get {
                return ResourceManager.GetString("CommandLine_Version_SectionTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target assembly from which to extract version information..
        /// </summary>
        internal static string CommandLine_VersionObject_Assembly_Description {
            get {
                return ResourceManager.GetString("CommandLine_VersionObject_Assembly_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The assembly version attribute to target (&apos;AssemblyVersion&apos;, &apos;AssemblyFileVersion&apos; (default), and &apos;AssemblyInformationalVersion&apos; are supported)..
        /// </summary>
        internal static string CommandLine_VersionObject_AssemblyAttribute_Description {
            get {
                return ResourceManager.GetString("CommandLine_VersionObject_AssemblyAttribute_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The version of the package, following the major.minor.patch pattern.
        ///
        ///.
        /// </summary>
        internal static string CommandLine_VersionObject_Value_Description {
            get {
                return ResourceManager.GetString("CommandLine_VersionObject_Value_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command argument &apos;{0}&apos; has already been defined..
        /// </summary>
        internal static string CommandLineArgumentException_AlreadyDefined {
            get {
                return ResourceManager.GetString("CommandLineArgumentException_AlreadyDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A valid module name is required..
        /// </summary>
        internal static string CommandLineArgumentException_ModuleRequired {
            get {
                return ResourceManager.GetString("CommandLineArgumentException_ModuleRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command argument &apos;{0}&apos; is not a recognized parameter..
        /// </summary>
        internal static string CommandLineArgumentException_NotRecognized {
            get {
                return ResourceManager.GetString("CommandLineArgumentException_NotRecognized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command argument property &apos;{0}&apos; has already been defined..
        /// </summary>
        internal static string CommandLineArgumentPropertyException_AlreadyDefined {
            get {
                return ResourceManager.GetString("CommandLineArgumentPropertyException_AlreadyDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command argument property &apos;{0}&apos; is not a recognized field..
        /// </summary>
        internal static string CommandLineArgumentPropertyException_NotRecognized {
            get {
                return ResourceManager.GetString("CommandLineArgumentPropertyException_NotRecognized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command argument property value &apos;{0}&apos; is not a recognized type..
        /// </summary>
        internal static string CommandLineArgumentPropertyException_UnknownValueType {
            get {
                return ResourceManager.GetString("CommandLineArgumentPropertyException_UnknownValueType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The assembly file &apos;{0}&apos; could not be found..
        /// </summary>
        internal static string FileNotFoundException_AssemblyNotFound {
            get {
                return ResourceManager.GetString("FileNotFoundException_AssemblyNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The NuSpec file &apos;{0}&apos; could not be found..
        /// </summary>
        internal static string FileNotFoundException_NuSpecNotFound {
            get {
                return ResourceManager.GetString("FileNotFoundException_NuSpecNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The module resource name &apos;{0}&apos; could not be resolved..
        /// </summary>
        internal static string ModuleNotFoundException_InvalidResource {
            get {
                return ResourceManager.GetString("ModuleNotFoundException_InvalidResource", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assembly version attribute &apos;{0}&apos; is not a known version type..
        /// </summary>
        internal static string NotSupportedException_UnknownAssemblyAttribute {
            get {
                return ResourceManager.GetString("NotSupportedException_UnknownAssemblyAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package Builder for Kentico ({0})
        ///Version {1}
        ///Copyright (c) Ntara, Inc. All rights reserved..
        /// </summary>
        internal static string OutputHeader {
            get {
                return ResourceManager.GetString("OutputHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Building module package....
        /// </summary>
        internal static string Progress_BuildingPackage {
            get {
                return ResourceManager.GetString("Progress_BuildingPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Module package created successfully..
        /// </summary>
        internal static string Progress_BuildSuccess {
            get {
                return ResourceManager.GetString("Progress_BuildSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initializing application....
        /// </summary>
        internal static string Progress_InitializingApplication {
            get {
                return ResourceManager.GetString("Progress_InitializingApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output Directory:.
        /// </summary>
        internal static string Report_OutputDirectory {
            get {
                return ResourceManager.GetString("Report_OutputDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Package Name:.
        /// </summary>
        internal static string Report_PackageName {
            get {
                return ResourceManager.GetString("Report_PackageName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}:.
        /// </summary>
        internal static string SectionFormat {
            get {
                return ResourceManager.GetString("SectionFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} -module:Company.Module -nuspec:&quot;Company.Module.nuspec&quot; -output:&quot;Packages/Modules&quot;
        ///
        ///{0} -module:Company.Module -nuspec:&quot;Company.Module.nuspec&quot; -version:1.2.0-RC1
        ///
        ///{0} -module:Company.Module -nuspec:&quot;Company.Module.nuspec&quot; -properties:company=&quot;Company, Inc.&quot;
        ///
        ///{0} -module:Company.Module -nuspec:&quot;Company.Module.nuspec&quot; -version:assembly=&quot;Company.Module.dll&quot;,assemblyAttribute=&quot;AssemblyInformationalVersion&quot;
        ///
        ///{0} -module:Company.Module -metadata:id=Company.CustomId,title=&quot;Custom Title&quot;,description=&quot;Cus [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string ToolExamples_Content {
            get {
                return ResourceManager.GetString("ToolExamples_Content", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Examples:.
        /// </summary>
        internal static string ToolExamples_SectionTitle {
            get {
                return ResourceManager.GetString("ToolExamples_SectionTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The {0} application must execute from the &apos;bin&apos; directory of a valid Kentico CMS installation. This allows the native module export to include all database objects, libraries, and file dependencies related to the specified module instance.
        ///
        ///More detailed information on Kentico module development may be found here:
        ///{1}.
        /// </summary>
        internal static string ToolNotes_Content {
            get {
                return ResourceManager.GetString("ToolNotes_Content", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Notes:.
        /// </summary>
        internal static string ToolNotes_SectionTitle {
            get {
                return ResourceManager.GetString("ToolNotes_SectionTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} &lt;-module:&lt;codename&gt;&gt; [-nuspec:&lt;nuspecfile&gt;] [-output:&lt;path&gt;] [args ...].
        /// </summary>
        internal static string ToolUsage {
            get {
                return ResourceManager.GetString("ToolUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Insufficient write permissions necessary for target path &apos;{0}&apos;..
        /// </summary>
        internal static string UnauthorizedAccessException_InsufficientWritePermissions {
            get {
                return ResourceManager.GetString("UnauthorizedAccessException_InsufficientWritePermissions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The module version could not be resolved from assembly &apos;{0}&apos; for type &apos;{1}&apos;..
        /// </summary>
        internal static string VersionNotFoundException_AssemblyVersionNotResolved {
            get {
                return ResourceManager.GetString("VersionNotFoundException_AssemblyVersionNotResolved", resourceCulture);
            }
        }
    }
}
